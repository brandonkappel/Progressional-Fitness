{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../programs.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction ProgramComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction ProgramComponent_form_4_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a program name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProgramComponent_form_4_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" description \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProgramComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"submit\", function ProgramComponent_form_4_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSavePost());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"input\", 4);\n    i0.ɵɵtemplate(3, ProgramComponent_form_4_mat_error_3_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-form-field\");\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵtemplate(6, ProgramComponent_form_4_mat_error_6_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h2\");\n    i0.ɵɵtext(8, \"Create Program!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 6);\n    i0.ɵɵtext(10, \"Save Program\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.programForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.programForm.get(\"name\").invalid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.programForm.get(\"description\").invalid);\n  }\n}\nconst _c0 = function () {\n  return [\"/programs\"];\n};\nexport let ProgramComponent = /*#__PURE__*/(() => {\n  class ProgramComponent {\n    constructor(programService, formbuilder, snackBar) {\n      this.programService = programService;\n      this.formbuilder = formbuilder;\n      this.snackBar = snackBar;\n      this.mode = 'create';\n      this.isLoading = false;\n    }\n    ngOnInit() {\n      this.programForm = this.formbuilder.group({\n        name: ['', Validators.required],\n        description: ['']\n      });\n    }\n    onSavePost() {\n      console.error('form:', this.programForm.value);\n      if (this.programForm.invalid) {\n        console.error(this.programForm);\n        return;\n      }\n      this.isLoading = true;\n      if (this.mode === 'create') {\n        this.programService.addProgram(this.programForm.value.name, this.programForm.value.description);\n        this.snackBar.open(\"Successfully Created Post\", \"\", {\n          duration: 2000,\n          verticalPosition: \"top\"\n        });\n      }\n      // else {\n      //   this.workoutService.updateUser(this.userId, this.form.value.firstName, this.form.value.lastName, this.form.value.email, this.form.value.role)\n      // }\n    }\n  }\n\n  ProgramComponent.ɵfac = function ProgramComponent_Factory(t) {\n    return new (t || ProgramComponent)(i0.ɵɵdirectiveInject(i1.ProgramsService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  ProgramComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProgramComponent,\n    selectors: [[\"app-program\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"m-2\", 3, \"routerLink\"], [3, \"formGroup\", \"submit\", 4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Program Name\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"type\", \"text\", \"placeholder\", \"Description \"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"]],\n    template: function ProgramComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵtemplate(1, ProgramComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵtext(3, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, ProgramComponent_form_4_Template, 11, 3, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i4.NgIf, i5.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i6.MatError, i6.MatFormField, i7.MatInput, i8.MatCard, i9.MatButton, i10.MatSpinner]\n  });\n  return ProgramComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}