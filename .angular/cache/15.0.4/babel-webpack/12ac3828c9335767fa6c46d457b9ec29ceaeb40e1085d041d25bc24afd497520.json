{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction PostCreateComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction PostCreateComponent_form_4_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a post title. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_form_4_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"img\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r4.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r4.form.value.title);\n  }\n}\nfunction PostCreateComponent_form_4_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter content. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"submit\", function PostCreateComponent_form_4_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSavePost());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"input\", 4);\n    i0.ɵɵtemplate(3, PostCreateComponent_form_4_mat_error_3_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PostCreateComponent_form_4_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const _r3 = i0.ɵɵreference(8);\n      return i0.ɵɵresetView(_r3.click());\n    });\n    i0.ɵɵtext(6, \"Pick Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 6, 7);\n    i0.ɵɵlistener(\"change\", function PostCreateComponent_form_4_Template_input_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onImagePicked($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, PostCreateComponent_form_4_div_9_Template, 2, 2, \"div\", 8);\n    i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"textarea\", 9);\n    i0.ɵɵtext(12, \"      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PostCreateComponent_form_4_mat_error_13_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"h2\");\n    i0.ɵɵtext(15, \"Create a Post!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 10);\n    i0.ɵɵtext(17, \"Save Post\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"title\").invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview !== \"\" && ctx_r1.imagePreview && ctx_r1.form.get(\"image\").valid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"content\").invalid);\n  }\n}\nconst _c0 = function () {\n  return [\"/posts\"];\n};\nexport let PostCreateComponent = /*#__PURE__*/(() => {\n  class PostCreateComponent {\n    constructor(postsService, route, router, snackBar) {\n      this.postsService = postsService;\n      this.route = route;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.enteredContent = \"\";\n      this.enteredTitle = \"\";\n      this.isLoading = false;\n      this.mode = 'create';\n    }\n    ngOnInit() {\n      this.form = new FormGroup({\n        \"title\": new FormControl(null, {\n          validators: [Validators.required, Validators.minLength(3)]\n        }),\n        \"content\": new FormControl(null, {\n          validators: [Validators.required]\n        })\n        // image: new FormControl(null, {\n        //   validators: [Validators.required],\n        //   asyncValidators: [mimeType]\n        // })\n      });\n\n      this.route.paramMap.subscribe(ParamMap => {\n        if (ParamMap.has('postId')) {\n          this.mode = 'edit';\n          this.postId = ParamMap.get('postId');\n          this.isLoading = true;\n          this.postsService.getPost(this.postId).subscribe(postData => {\n            this.isLoading = false;\n            this.post = {\n              id: postData._id,\n              title: postData.title,\n              content: postData.content,\n              creator: postData.creator\n            };\n            this.form.setValue({\n              'title': this.post.title,\n              'content': this.post.content\n            });\n          });\n        } else {\n          this.mode = 'create';\n          this.postId = null;\n        }\n      });\n    }\n    onImagePicked(event) {\n      const file = event.target.files[0];\n      this.form.patchValue({\n        image: file\n      });\n      this.form.get('image').updateValueAndValidity();\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imagePreview = reader.result;\n        console.error(this.imagePreview);\n      };\n      reader.readAsDataURL(file);\n      //reference lecture 77 - 79\n    }\n\n    onSavePost() {\n      console.error('form', this.form);\n      if (this.form.invalid) {\n        console.error(this.form);\n        return;\n      }\n      this.isLoading = true;\n      if (this.mode === 'create') {\n        this.postsService.addPost(this.form.value);\n        this.snackBar.open(\"Successfully Created Post\", \"\", {\n          duration: 2000,\n          verticalPosition: \"top\"\n        });\n      } else {\n        this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content);\n        this.snackBar.open(\"Successfully Update Post\", \"\", {\n          duration: 2000,\n          verticalPosition: \"top\"\n        });\n      }\n      // this.router.navigateByUrl('')\n      this.form.reset();\n    }\n  }\n  PostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n    return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  PostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostCreateComponent,\n    selectors: [[\"app-post-create\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"m-2\", 3, \"routerLink\"], [3, \"formGroup\", \"submit\", 4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Post Title\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"type\", \"button\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filepicker\", \"\"], [\"class\", \"imagePreview\", 4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"4\", \"formControlName\", \"content\", \"placeholder\", \"Post Content\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"], [1, \"imagePreview\"], [3, \"src\", \"alt\"]],\n    template: function PostCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵtemplate(1, PostCreateComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵtext(3, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, PostCreateComponent_form_4_Template, 18, 4, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatInput, i7.MatFormField, i7.MatError, i8.MatCard, i9.MatButton, i10.MatProgressSpinner],\n    styles: [\"mat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%}mat-spinner[_ngcontent-%COMP%]{margin:auto}input[type=file][_ngcontent-%COMP%]{visibility:hidden}.imagePreview[_ngcontent-%COMP%]{height:5rem;margin:1rem 0}.imagePreview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return PostCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}