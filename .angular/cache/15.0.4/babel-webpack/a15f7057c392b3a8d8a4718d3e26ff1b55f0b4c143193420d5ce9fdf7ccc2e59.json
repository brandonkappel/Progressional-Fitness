{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../workouts.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"src/app/private/clients/clients.service\";\nimport * as i5 from \"../../programs/programs.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/progress-spinner\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/material/core\";\nimport * as i16 from \"@angular/material/datepicker\";\nfunction WorkoutComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction WorkoutComponent_form_4_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a workout name. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WorkoutComponent_form_4_mat_form_field_13_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", user_r10.firstName, \" \", user_r10.lastName, \" (\", user_r10.email, \") \");\n  }\n}\nfunction WorkoutComponent_form_4_mat_form_field_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Clients\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 19);\n    i0.ɵɵtemplate(4, WorkoutComponent_form_4_mat_form_field_13_mat_option_4_Template, 2, 4, \"mat-option\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.users);\n  }\n}\nfunction WorkoutComponent_form_4_mat_form_field_14_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const program_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", program_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", program_r12.name, \" \");\n  }\n}\nfunction WorkoutComponent_form_4_mat_form_field_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Programs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 22);\n    i0.ɵɵtemplate(4, WorkoutComponent_form_4_mat_form_field_14_mat_option_4_Template, 2, 2, \"mat-option\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.programs);\n  }\n}\nfunction WorkoutComponent_form_4_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"mat-card\", 5)(2, \"mat-form-field\", 24);\n    i0.ɵɵelement(3, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"mat-form-field\", 26)(6, \"textarea\", 27);\n    i0.ɵɵtext(7, \" \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"mat-form-field\", 26)(10, \"textarea\", 28);\n    i0.ɵɵtext(11, \" \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function WorkoutComponent_form_4_div_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r14 = restoredCtx.index;\n      const item_r13 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      const _r2 = i0.ɵɵreference(13);\n      return i0.ɵɵresetView(ctx_r15.openDelete(_r2, i_r14, item_r13));\n    });\n    i0.ɵɵtext(13, \" Remove Item \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r14 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r14);\n  }\n}\nfunction WorkoutComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 8)(1, \"mat-card\", 5)(2, \"div\", 9)(3, \"mat-form-field\", 10);\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵtemplate(5, WorkoutComponent_form_4_mat_error_5_Template, 2, 0, \"mat-error\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 10)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Workout date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 12)(10, \"mat-datepicker-toggle\", 13)(11, \"mat-datepicker\", null, 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, WorkoutComponent_form_4_mat_form_field_13_Template, 5, 1, \"mat-form-field\", 15);\n    i0.ɵɵtemplate(14, WorkoutComponent_form_4_mat_form_field_14_Template, 5, 1, \"mat-form-field\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 16);\n    i0.ɵɵtemplate(17, WorkoutComponent_form_4_div_17_Template, 14, 1, \"div\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(12);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.workoutForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.workoutForm.get(\"workoutName\").invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r5)(\"value\", ctx_r1.date.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.workoutType != \"personal\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.workoutType != \"personal\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.workoutItems.controls);\n  }\n}\nfunction WorkoutComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \" Are you sure you want to delete this workout item?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 30)(5, \"button\", 31);\n    i0.ɵɵtext(6, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function WorkoutComponent_ng_template_12_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const data_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.removeWorkoutItem(data_r17.index, data_r17.item.value._id));\n    });\n    i0.ɵɵtext(8, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Delete \", data_r17.item.value.name, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/fitness\"];\n};\nexport let WorkoutComponent = /*#__PURE__*/(() => {\n  class WorkoutComponent {\n    constructor(workoutService, formbuilder, snackBar, clientService, programService, dialog, route) {\n      this.workoutService = workoutService;\n      this.formbuilder = formbuilder;\n      this.snackBar = snackBar;\n      this.clientService = clientService;\n      this.programService = programService;\n      this.dialog = dialog;\n      this.route = route;\n      this.isLoading = false;\n      this.mode = 'create';\n      this.sectionAdded = false;\n      this.date = new FormControl(new Date());\n      this.users = [];\n      this.programs = [];\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(param => {\n        console.error(param);\n        this.workoutType = param.type;\n      });\n      this.getData();\n    }\n    getData() {\n      if (this.workoutType != 'personal') {\n        this.clientService.getUsers(this.usersPerPage, this.currentPage);\n        this.usersSub = this.clientService.getUserUpdatedListener().subscribe(userData => {\n          this.isLoading = false;\n          this.totalUsers = userData.userCount;\n          this.users = userData.users;\n        });\n        this.programService.getPrograms();\n        this.programService.getProgramUpdatedListener().subscribe(programData => {\n          this.programs = programData.programs;\n        });\n      }\n      this.workoutForm = this.formbuilder.group({\n        workoutName: ['', Validators.required],\n        date: ['', new Date()],\n        user: new FormControl(''),\n        program: new FormControl(''),\n        workoutItem: this.formbuilder.array([]),\n        personalWorkout: new FormControl(this.workoutType == 'personal' ? '1' : '0')\n      });\n      console.error('this is a test', this.workoutForm.value);\n      this.route.paramMap.subscribe(ParamMap => {\n        // console.error(ParamMap)\n        if (ParamMap.has('id')) {\n          this.mode = 'edit';\n          this.workoutId = ParamMap.get('id');\n          this.isLoading = true;\n          this.workoutService.getWorkout(this.workoutId).subscribe(workoutData => {\n            // console.error(workoutData)\n            this.isLoading = false;\n            this.workout = {\n              id: workoutData._id,\n              name: workoutData.name,\n              date: workoutData.date,\n              client: workoutData.client,\n              creator: workoutData.creator,\n              program: workoutData.program\n            };\n            this.workoutForm.patchValue({\n              workoutName: this.workout.name,\n              date: this.workout.date,\n              user: this.workout.client,\n              program: this.workout.program,\n              personalWorkout: this.workoutType == 'personal' ? '1' : '0'\n            });\n            this.workoutService.getWorkoutI(this.workout.id).subscribe(workoutItems => {\n              // console.error(workoutItems)\n              this.workoutI = workoutItems;\n              // console.error('ITEMS:', this.workoutI)\n              // this.setWorkoutItems()\n              let workoutItemControl = this.workoutForm.controls.workoutItem;\n              this.workoutI.forEach(item => {\n                workoutItemControl.push(this.formbuilder.group({\n                  _id: item._id,\n                  name: item.name,\n                  description: item.description,\n                  comments: item.comments\n                }));\n              });\n            });\n          });\n        } else {\n          this.mode = 'create';\n          this.workoutId = null;\n        }\n      });\n    }\n    // setWorkoutItems() {\n    //   let control = <FormArray>this.workoutForm.controls.workoutItem;\n    //   this.workoutI.forEach(x => {\n    //     control.push(this.formbuilder.group(x));\n    //   })\n    // }\n    get workoutItems() {\n      return this.workoutForm.get('workoutItem');\n    }\n    createWorkoutItems() {\n      return new FormGroup({\n        _id: new FormControl(''),\n        name: new FormControl(''),\n        description: new FormControl(''),\n        comments: new FormControl('')\n      });\n    }\n    addItem() {\n      this.workoutItems.push(this.createWorkoutItems());\n    }\n    removeWorkoutItem(i, item) {\n      console.error(i, item);\n      this.workoutItems.removeAt(i);\n      this.workoutService.deleteWorkoutItem(item).subscribe(item => {\n        console.error(item);\n      });\n      this.dialog.closeAll();\n    }\n    openDelete(templateRef, i, item) {\n      console.error(item);\n      let dialogRef = this.dialog.open(templateRef, {\n        data: {\n          item: item,\n          index: i\n        }\n      });\n    }\n    onSavePost() {\n      console.error('SAVE STARTED ', this.workoutForm.value);\n      if (this.workoutForm.invalid) {\n        console.error('ERROR ON FORM', this.workoutForm);\n        return;\n      }\n      let workout = {\n        name: this.workoutForm.value.workoutName,\n        date: this.date.value,\n        client: this.workoutForm.value.user,\n        program: this.workoutForm.value.program,\n        personalWorkout: this.workoutForm.value.personalWorkout\n      };\n      let workoutItem = this.workoutForm.value.workoutItem;\n      console.error('Item', workoutItem);\n      // this.isLoading = true;\n      if (this.mode === 'create') {\n        this.workoutService.addWorkout(workout, workoutItem);\n        this.snackBar.open(\"Successfully Created Post\", \"\", {\n          duration: 2000,\n          verticalPosition: \"top\"\n        });\n      } else {\n        this.workoutService.updateWorkout(this.workout.id, workout, workoutItem);\n        this.snackBar.open(\"Successfully Update Post\", \"\", {\n          duration: 2000,\n          verticalPosition: \"top\"\n        });\n      }\n    }\n  }\n  WorkoutComponent.ɵfac = function WorkoutComponent_Factory(t) {\n    return new (t || WorkoutComponent)(i0.ɵɵdirectiveInject(i1.WorkoutsService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.ClientsService), i0.ɵɵdirectiveInject(i5.ProgramsService), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i7.ActivatedRoute));\n  };\n  WorkoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkoutComponent,\n    selectors: [[\"app-workout\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[2, \"background-color\", \"lightgray\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"m-2\", 3, \"routerLink\"], [3, \"formGroup\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 1, \"ms-3\", 3, \"click\"], [1, \"m-3\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"template\", \"\"], [3, \"formGroup\"], [1, \"row\", \"m-3\"], [\"appearance\", \"outline\", 1, \"col\"], [\"matInput\", \"\", \"formControlName\", \"workoutName\", \"type\", \"text\", \"placeholder\", \"Workout Name\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\", \"value\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker3\", \"\"], [\"class\", \"col\", \"appearance\", \"fill\", 4, \"ngIf\"], [\"formArrayName\", \"workoutItem\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"fill\", 1, \"col\"], [\"formControlName\", \"user\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"formControlName\", \"program\"], [3, \"formGroupName\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Workout Item Name\"], [\"appearance\", \"fill\", 1, \"formText\"], [\"matInput\", \"\", \"rows\", \"5\", \"cols\", \"40\", \"formControlName\", \"description\", \"type\", \"text\", \"placeholder\", \"description\", 2, \"white-space\", \"pre-wrap\"], [\"rows\", \"5\", \"cols\", \"40\", \"matInput\", \"\", \"formControlName\", \"comments\", \"type\", \"text\", \"placeholder\", \"comments\", 2, \"white-space\", \"pre-wrap\"], [\"color\", \"warn\", \"mat-raised-button\", \"\", 2, \"float\", \"inline-end\", 3, \"click\"], [1, \"d-flex\", \"justify-content-between\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"danger\", 3, \"click\"]],\n    template: function WorkoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, WorkoutComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵtext(3, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, WorkoutComponent_form_4_Template, 18, 8, \"form\", 3);\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function WorkoutComponent_Template_button_click_5_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(6, \"Add Item\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card\", 5)(8, \"h2\");\n        i0.ɵɵtext(9, \"Update Workout!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function WorkoutComponent_Template_button_click_10_listener() {\n          return ctx.onSavePost();\n        });\n        i0.ɵɵtext(11, \"Save Workout\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, WorkoutComponent_ng_template_12_Template, 9, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i8.NgForOf, i8.NgIf, i7.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatError, i10.MatSuffix, i11.MatCard, i12.MatButton, i13.MatProgressSpinner, i6.MatDialogClose, i14.MatSelect, i15.MatOption, i16.MatDatepicker, i16.MatDatepickerInput, i16.MatDatepickerToggle],\n    styles: [\".formText[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return WorkoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}